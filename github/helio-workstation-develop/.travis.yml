language: generic
sudo: false

notifications:
  email: false

branches:
  only:
    - master
    - develop

addons_shortcuts:
  # Commented out Clang builds until Xenial images are available in Travis.
  # Trusty-based builds are broken, as JUCE requires libc++ at least of 3.7
  # addons_clang40: &clang40
  #   apt:
  #     sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-4.0' ]
  #     packages: [ 'clang-4.0', 'libc++-dev', 'libfreetype6-dev', 'libx11-dev', 'libxinerama-dev', 'libxrandr-dev', 'libxcursor-dev', 'libxcomposite-dev', 'mesa-common-dev', 'freeglut3-dev', 'libcurl4-gnutls-dev+', 'libasound2-dev', 'libjack-dev', 'unzip', 'xvfb' ]
  # addons_clang50: &clang50
  #   apt:
  #     sources: [ 'ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-5.0' ]
  #     packages: [ 'clang-5.0', 'libc++-dev', 'libfreetype6-dev', 'libx11-dev', 'libxinerama-dev', 'libxrandr-dev', 'libxcursor-dev', 'libxcomposite-dev', 'mesa-common-dev', 'freeglut3-dev', 'libcurl4-gnutls-dev+', 'libasound2-dev', 'libjack-dev', 'unzip', 'xvfb' ]
  addons_gcc5: &gcc5
    apt:
      sources: [ 'ubuntu-toolchain-r-test' ]
      packages: [ 'g++-5', 'gcc-5', 'libfreetype6-dev', 'libx11-dev', 'libxinerama-dev', 'libxrandr-dev', 'libxcursor-dev', 'libxcomposite-dev', 'mesa-common-dev', 'freeglut3-dev', 'libcurl4-gnutls-dev+', 'libasound2-dev', 'libjack-dev', 'unzip', 'xvfb' ]
  addons_gcc6: &gcc6
    apt:
      sources: [ 'ubuntu-toolchain-r-test' ]
      packages: [ 'g++-6', 'gcc-6', 'libfreetype6-dev', 'libx11-dev', 'libxinerama-dev', 'libxrandr-dev', 'libxcursor-dev', 'libxcomposite-dev', 'mesa-common-dev', 'freeglut3-dev', 'libcurl4-gnutls-dev+', 'libasound2-dev', 'libjack-dev', 'unzip', 'xvfb' ]
  # Use old enough compiler and no unsupported packages so that release build runs on older systems:
  addons_gcc4: &gcc4
    ssh_known_hosts: helio.fm
    apt:
      packages: [ 'libfreetype6-dev', 'libx11-dev', 'libxinerama-dev', 'libxrandr-dev', 'libxcursor-dev', 'libxcomposite-dev', 'mesa-common-dev', 'freeglut3-dev', 'libcurl4-gnutls-dev+', 'libasound2-dev', 'libjack-dev', 'unzip', 'xvfb' ]
  addons_deploy: &deploy
    ssh_known_hosts: helio.fm

matrix:
  include:
    # - name: "clang 4.0"
    #   addons: *clang40
    #   env: CC=clang-4.0 CXX=clang++-4.0 CONFIG=Travis DISPLAY=localhost:1.0 CFLAGS=-stdlib=libc++ LDFLAGS=-stdlib=libc++
    # - name: "clang 5.0"
    #   addons: *clang50
    #   env: CC=clang-5.0 CXX=clang++-5.0 CONFIG=Travis DISPLAY=localhost:1.0 CFLAGS=-stdlib=libc++ LDFLAGS=-stdlib=libc++
    - name: "gcc 5, debug build, 64-bit"
      os: linux
      dist: trusty
      addons: *gcc5
      env: CC=gcc-5 CXX=g++-5 CONFIG=Travis DISPLAY=localhost:1.0
    - name: "gcc 6, debug build, 64-bit"
      os: linux
      dist: trusty
      addons: *gcc6
      env: CC=gcc-6 CXX=g++-6 CONFIG=Travis DISPLAY=localhost:1.0
    - name: "gcc 4, release build, 64-bit, deploy"
      os: linux
      dist: trusty
      addons: *gcc4
      env: DEPLOY=true CONFIG=Release64 DISPLAY=localhost:1.0
    - name: "xcode 10, release and deploy"
      os: osx
      osx_image: xcode10
      xcode_sdk: macosx10.14
      addons: *deploy
      env: DEPLOY=true

before_script:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    openssl aes-256-cbc -K $encrypted_2dee6ac16b0a_key -iv $encrypted_2dee6ac16b0a_iv -in ${TRAVIS_BUILD_DIR}/Projects/Deployment/Travis/osx-certificates.tar.enc -out /tmp/certificates.tar -d;
    tar xvf /tmp/certificates.tar -C /tmp;
    bash ${TRAVIS_BUILD_DIR}/Projects/Deployment/Travis/setup-osx.sh;
    fi

script:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    xvfb-run -a bash -c 'cd Projects/LinuxMakefile && make';
    fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    xcodebuild -project Projects/macOS/Helio.xcodeproj -configuration Release -scheme 'Helio - App' -archivePath /tmp/archive archive;
    fi

before_deploy:
  - openssl aes-256-cbc -K $encrypted_e6d7a52b0113_key -iv $encrypted_e6d7a52b0113_iv -in ${TRAVIS_BUILD_DIR}/Projects/Deployment/Travis/deploy-rsa.enc -out /tmp/deploy_rsa -d
  - eval "$(ssh-agent -s)"
  - chmod 600 /tmp/deploy_rsa
  - ssh-add /tmp/deploy_rsa

deploy:
  provider: script
  skip_cleanup: true
  script: bash ${TRAVIS_BUILD_DIR}/Projects/Deployment/Travis/deploy-${TRAVIS_OS_NAME}.sh
  on:
    branch: develop
    condition: $DEPLOY = true
